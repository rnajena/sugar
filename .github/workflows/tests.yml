name: tests
on:
  push:
  pull_request:
    branches:
      # only branches from forks which have the form 'user:branch-name'
      - '**:**'
  schedule:
    - cron:  '42 0 * * 0'
jobs:
  run_minimal_test:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: "3.12"
      - name: print conda environment info
        run: |
          conda info -a
          conda list
      - name: install package
        run: |
          pip install -v --no-deps .
      - name: check that package works
        run: |
          sugar -h
          python -c "from sugar import read; print(read())"
  run_tests:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python: ["3.11", "3.12", "3.13"]
        options: [""]
        include:
          - os: ubuntu-latest
            python: "3.12"
            options: full
          - os: ubuntu-latest
            python: "3.12"
            options: full warnings
          - os: ubuntu-latest
            python: "3.13"
            options: subset
          - os: macos-latest
            python: "3.12"
            options: full
          - os: windows-latest
            python: "3.12"
            options: full
    runs-on: ${{ matrix.os }}
    continue-on-error: ${{ contains(matrix.options, 'warnings') }}
    env:
      # set additional runtest options (--web, -W error)
      test_options: ${{ contains(matrix.options, 'full') && '--web' || '' }} ${{ contains(matrix.options, 'warnings') && '-W error' || '' }}
      # set additional dependencies for full test
      deps: ${{ contains(matrix.options, 'full') && 'matplotlib pandas platformdirs seaborn requests biopython tqdm' || ''  }}
      depspip: ${{ contains(matrix.options, 'full') && 'binarysearchfile' || contains(matrix.options, 'subset') && 'binarysearchfile' || ''  }}
    defaults:
      run:
        shell: bash -l {0}
    steps:
      - uses: actions/checkout@v4
      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v3
        with:
          python-version: ${{ matrix.python }}
      - name: install dependencies
        run: |
          conda install -y pytest pytest-cov ${{ env.deps }}
      - name: install pip dependencies
        if: contains(matrix.options, 'full') || contains(matrix.options, 'subset')
        run:
          pip install ${{ env.depspip }}
      - name: print conda environment info
        run: |
          conda info -a
          conda list
      - name: install package
        run: |
          pip install -v --no-deps .
      - name: run test suite
        run: |
          sugar test --cov sugar --cov=. --cov-report=xml --cov-append ${{ env.test_options }}
      - name: upload coverage
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }} # required
          fail_ci_if_error: true
